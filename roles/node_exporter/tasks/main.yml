---
- import_tasks: preflight.yml
  tags:
    - node_exporter_install
    - node_exporter_configure
    - node_exporter_run

- import_tasks: install.yml
  become: true
  when:
    ( not __node_exporter_is_installed.stat.exists ) or
    ( __node_exporter_current_version_output.stderr_lines[0].split(" ")[2] != node_exporter_version ) or
    ( node_exporter_binary_local_dir | length > 0 )
  tags:
    - node_exporter_install

- import_tasks: selinux.yml
  become: true
  when: ansible_selinux.status == "enabled"
  tags:
    - node_exporter_configure

- import_tasks: configure.yml
  become: true
  tags:
    - node_exporter_configure

- name: Ensure Node Exporter is enabled on boot
  become: true
  systemd:
    daemon_reload: true
    name: node_exporter
    enabled: true
    state: started
  when:
    - not ansible_check_mode
  tags:
    - node_exporter_run

- name: check node_exporter started
  become: true
  shell: "ps aux|grep node_exporter|grep -v grep |cat "
  register: __node_exporter_start
  ignore_errors: true
  when:
   - not ansible_check_mode

- name: tag instance
  become: true
  shell: |
     EC2_INSTANCE_ID=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-id`
     EC2_AVAIL_ZONE=`wget -q -O - http://169.254.169.254/latest/meta-data/placement/availability-zone`
     EC2_REGION="`echo \"$EC2_AVAIL_ZONE\" | sed -e 's:\([0-9][0-9]*\)[a-z]*\$:\\1:'`"
     /usr/bin/aws ec2 create-tags --region $EC2_REGION --resources $EC2_INSTANCE_ID --tags Key=node_exporter,Value=installed
  when:
    - not ansible_check_mode
    - __node_exporter_start.stdout != ""


- name: node_exporter installed and update prometheus_scrape_url
  become: true
  connection: local
  register: __node_exporter_scrapy_install
  shell: "{{ python_venv_execute }} {{update_scrape_script}} {{ meta_json_file }} {{ deploy_cluster_id }}"
  when:
   - not ansible_check_mode
- debug: var=__node_exporter_scrapy_install
